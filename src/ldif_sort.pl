#!/usr/bin/env perl
## @author Robin Schneider <robin.schneider@hamcos.de>
## @company hamcos IT Service GmbH http://www.hamcos.de
## @license AGPLv3 <https://www.gnu.org/licenses/agpl-3.0.html>

## Let Perl do something where it shines :)

## Sort LDIF file to make them reproducible when they where generated by some
## Perl library which does not sort hashes â€¦
## Useful for unit testing.

use strict;
use warnings;
use autodie;
use feature qw(say);
use utf8;
use open qw(:std :utf8);
binmode STDOUT, ':encoding(UTF-8)';

use version; our $VERSION = qv('1.0.0');

sub output {
    my $LDAP_entry_ref = shift;
    map { "$_: $LDAP_entry_ref->{$_}\n" } sort keys %{$LDAP_entry_ref};
}

my %LDAP_entry;

while (<>) {
    chomp;

    if ( /^\s*$/xms and scalar keys %LDAP_entry ) {
        say output(\%LDAP_entry);
        %LDAP_entry = ();
    }
    else {
        if (/^(?<key>[^:]*?):\s+(?<value>.*)/xms) {
            $LDAP_entry{ $+{key} } = $+{value};
        }
    }
}

if ( scalar keys %LDAP_entry ) {
    say output(\%LDAP_entry);
}
